{"version":3,"file":"index.min.js","sources":["../lib/shared.js","../lib/drag.js","../lib/pinch.js"],"sourcesContent":["export function dispatchCustomEvent(name, elm, detail, cancelable = true) {\r\n    return !elm.dispatchEvent(\r\n        new CustomEvent(`ezg${name}`, { detail, cancelable })\r\n    );\r\n}\r\n","import { dispatchCustomEvent } from \"./shared\";\n\nlet activeDraggedElement;\nlet startX, startY;\nlet lastX, lastY;\nlet checkDragPos;\n\nconst defaults = {\n    threshold: 0,\n};\n\nconst options = new WeakMap();\n\nexport function enableDragEvents(elm, opt = defaults) {\n    elm.addEventListener(\"touchstart\", onPointerDown, true);\n    elm.addEventListener(\"mousedown\", onPointerDown, true);\n    options.set(elm, opt);\n}\n\n// create dummy mouse event object to get mouse related properties like e.clientX e.clientY, e.altKey, etc..\nconst MOUSE_EVENT_PROPS = Object.keys(\n    Object.getPrototypeOf(new MouseEvent(\"\"))\n);\n\nconst TOUCH_EVENT_PROPS = [\"changedTouches\", \"touches\", \"targetTouches\"];\n\nfunction getPointerPosition(e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    return [e.clientX, e.clientY];\n}\n\nfunction onPointerDown(e) {\n    activeDraggedElement = e.currentTarget;\n    checkDragPos = true;\n\n    [startX, startY] = getPointerPosition(e);\n\n    addOrRemoveEvents();\n}\n\nfunction onPointerMove(e) {\n    e.preventDefault();\n    if (!activeDraggedElement) return;\n\n    const [x, y] = getPointerPosition(e);\n\n    if (checkDragPos) {\n        const opt = options.get(activeDraggedElement);\n\n        if (Math.hypot(x - startX, y - startY) < opt.threshold) return;\n\n        checkDragPos = false;\n        [lastX, lastY] = [x, y];\n\n        if (!dispatchDragEvent(\"dragstart\", e)) {\n            removeDragEvents();\n        }\n    } else if (dispatchDragEvent(\"dragmove\", e)) {\n        [lastX, lastY] = [x, y];\n    }\n}\n\nfunction getDragPositions(e) {\n    const [clientX, clientY] = getPointerPosition(e);\n    return {\n        startX,\n        startY,\n        lastX,\n        lastY,\n\n        //current mouse position\n        clientX,\n        clientY,\n\n        // mouse delta from initial drag position\n        offsetX: clientX - startX,\n        offsetY: clientY - startY,\n\n        // mouse delta from last drag position\n        movementX: clientX - lastX,\n        movementY: clientY - lastY,\n    };\n}\n\nfunction removeDragEvents() {\n    activeDraggedElement = undefined;\n\n    addOrRemoveEvents(true);\n}\n\nfunction onPointerUp(e) {\n    if (activeDraggedElement && !checkDragPos) {\n        dispatchDragEvent(\"dragstop\", e, false);\n    }\n\n    removeDragEvents();\n}\n\nfunction addOrRemoveEvents(remove) {\n    const fn = remove ? \"removeEventListener\" : \"addEventListener\";\n    document[fn](\"mouseup\", onPointerUp);\n    document[fn](\"touchend\", onPointerUp);\n    document[fn](\"mousemove\", onPointerMove);\n    document[fn](\"touchmove\", onPointerMove);\n}\n\nfunction dispatchDragEvent(name, e, cancelable = true) {\n    return !dispatchCustomEvent(\n        name,\n        activeDraggedElement,\n        {\n            ...getDragPositions(e),\n            originalEvent: e,\n        },\n        cancelable\n    );\n}\n","import { dispatchCustomEvent } from \"./shared\";\n\nlet startTouches;\nlet lastTouches;\n\nlet activeElement;\nlet checkPinch;\n\nlet lastDist;\nlet lastOffset;\nlet lastAngle;\n\nconst defaults = {\n    distanceThreshold: 0,\n    angleThreshold: 0,\n};\n\nconst options = new WeakMap();\n\nexport function enablePinchEvents(elm, opt = defaults) {\n    options.set(elm, opt);\n    elm.addEventListener(\"touchstart\", onTouchStart);\n}\n\nfunction onTouchStart(e) {\n    startTouches = e.touches;\n    checkPinch = true;\n    e.currentTarget.addEventListener(\"touchmove\", onTouchMove);\n}\n\nfunction onTouchMove(e) {\n    e.preventDefault();\n    if (e.touches.length != 2) return;\n\n    const props = calculatePinchProps(e.touches);\n\n    if (checkPinch) {\n        pinchStartHandler(e, props);\n    } else {\n        pinchMoveHandler(e, props);\n    }\n}\n\nfunction pinchStartHandler(e, { dist, angle }) {\n    if (startTouches.length != 2) return;\n    const { dist: startDist, angle: startAngle } = calculatePinchProps(\n        startTouches\n    );\n\n    const { distanceThreshold, angleThreshold } = options.get(e.currentTarget);\n\n    const dd = Math.abs(dist - startDist);\n    const da = Math.abs(angle - startAngle);\n\n    if (dd >= distanceThreshold && da >= angleThreshold) {\n        const isCancelled = dispatchCustomEvent(\"pinchstart\", e.currentTarget, {\n            startTouches,\n            originalEvent: e,\n        });\n\n        if (isCancelled) {\n            return elm.removeEventListener(\"touchmove\", onTouchMove);\n        }\n\n        activeElement = e.currentTarget;\n        lastDist = startDist;\n        lastAngle = startAngle;\n        lastOffset = 0;\n        checkPinch = false;\n        document.addEventListener(\"touchend\", onTouchEnd);\n    }\n}\n\nfunction pinchMoveHandler(e, props) {\n    const { angle, offset, dist } = props;\n    const isCancelled = dispatchPinchEvent(\"move\", e.currentTarget, {\n        ...props,\n        originalEvent: e,\n        touches: e.touches,\n    });\n\n    // will stop counting lastDist/Offset when cancelled\n    if (isCancelled) return;\n\n    lastDist = dist;\n    lastAngle = angle;\n    lastOffset = offset;\n}\n\nfunction calculatePinchProps(touches) {\n    const [p1, p2] = touches;\n\n    const dx = p1.clientX - p2.clientX;\n    const dy = p1.clientY - p2.clientY;\n\n    const dist = Math.hypot(dx, dy);\n    const offset = dist - lastDist;\n\n    const angle = Math.atan2(dy, dx);\n    const da = angle - lastAngle;\n\n    const midX = (p1.clientX + p2.clientX) / 2;\n    const midY = (p1.clientY + p2.clientY) / 2;\n\n    const dir = Math.sign(dist - (lastDist || dist));\n\n    return { dx, dy, da, dist, angle, offset, midX, midY, dir };\n}\n\nfunction onTouchEnd(e) {\n    if (!checkPinch && activeElement) {\n        dispatchPinchEvent(\"end\", activeElement, null, false);\n        activeElement = undefined;\n    }\n}\n\nfunction dispatchPinchEvent(ev, elm, detail, cancelable) {\n    detail = {\n        ...detail,\n        startTouches,\n        lastTouches,\n        lastOffset,\n        lastDist,\n        lastAngle,\n    };\n    return dispatchCustomEvent(`pinch${ev}`, elm, detail, cancelable);\n}\n"],"names":["dispatchCustomEvent","name","elm","detail","cancelable","dispatchEvent","CustomEvent","activeDraggedElement","startX","startY","lastX","lastY","checkDragPos","defaults","threshold","options","WeakMap","getPointerPosition","e","changedTouches","clientX","clientY","onPointerDown","currentTarget","addOrRemoveEvents","onPointerMove","preventDefault","x","y","opt","get","Math","hypot","dispatchDragEvent","removeDragEvents","getDragPositions","offsetX","offsetY","movementX","movementY","undefined","onPointerUp","remove","fn","document","originalEvent","startTouches","activeElement","checkPinch","lastDist","lastOffset","lastAngle","Object","keys","getPrototypeOf","MouseEvent","distanceThreshold","angleThreshold","onTouchStart","touches","addEventListener","onTouchMove","length","props","calculatePinchProps","dist","angle","startDist","startAngle","dd","abs","da","removeEventListener","onTouchEnd","pinchStartHandler","offset","dispatchPinchEvent","pinchMoveHandler","p1","p2","dx","dy","atan2","midX","midY","dir","sign","ev","lastTouches","set"],"mappings":"2OAAO,SAASA,EAAoBC,EAAMC,EAAKC,EAAQC,GAAa,GAChE,OAAQF,EAAIG,cACR,IAAIC,YAAY,MAAML,IAAQ,CAAEE,OAAAA,EAAQC,WAAAA,KCAhD,IAAIG,EACAC,EAAQC,EACRC,EAAOC,EACPC,EAEJ,MAAMC,EAAW,CACbC,UAAW,GAGTC,EAAU,IAAIC,QAepB,SAASC,EAAmBC,GAExB,OADIA,EAAEC,iBAAgBD,EAAIA,EAAEC,eAAe,IACpC,CAACD,EAAEE,QAASF,EAAEG,SAGzB,SAASC,EAAcJ,GACnBX,EAAuBW,EAAEK,cACzBX,GAAe,GAEdJ,EAAQC,GAAUQ,EAAmBC,GAEtCM,IAGJ,SAASC,EAAcP,GAEnB,GADAA,EAAEQ,kBACGnB,EAAsB,OAE3B,MAAOoB,EAAGC,GAAKX,EAAmBC,GAElC,GAAIN,EAAc,CACd,MAAMiB,EAAMd,EAAQe,IAAIvB,GAExB,GAAIwB,KAAKC,MAAML,EAAInB,EAAQoB,EAAInB,GAAUoB,EAAIf,UAAW,OAExDF,GAAe,GACdF,EAAOC,GAAS,CAACgB,EAAGC,GAEhBK,EAAkB,YAAaf,IAChCgB,SAEGD,EAAkB,WAAYf,MACpCR,EAAOC,GAAS,CAACgB,EAAGC,IAI7B,SAASO,EAAiBjB,GACtB,MAAOE,EAASC,GAAWJ,EAAmBC,GAC9C,MAAO,CACHV,OAAAA,EACAC,OAAAA,EACAC,MAAAA,EACAC,MAAAA,EAGAS,QAAAA,EACAC,QAAAA,EAGAe,QAAShB,EAAUZ,EACnB6B,QAAShB,EAAUZ,EAGnB6B,UAAWlB,EAAUV,EACrB6B,UAAWlB,EAAUV,GAI7B,SAASuB,IACL3B,OAAuBiC,EAEvBhB,GAAkB,GAGtB,SAASiB,EAAYvB,GACbX,IAAyBK,GACzBqB,EAAkB,WAAYf,GAAG,GAGrCgB,IAGJ,SAASV,EAAkBkB,GACvB,MAAMC,EAAKD,EAAS,sBAAwB,mBAC5CE,SAASD,GAAI,UAAWF,GACxBG,SAASD,GAAI,WAAYF,GACzBG,SAASD,GAAI,YAAalB,GAC1BmB,SAASD,GAAI,YAAalB,GAG9B,SAASQ,EAAkBhC,EAAMiB,EAAGd,GAAa,GAC7C,OAAQJ,EACJC,EACAM,EACA,IACO4B,EAAiBjB,GACpB2B,cAAe3B,GAEnBd,GChHR,IAAI0C,EAGAC,EACAC,EAEAC,EACAC,EACAC,EDUsBC,OAAOC,KAC7BD,OAAOE,eAAe,IAAIC,WAAW,MCTzC,MAAM1C,EAAW,CACb2C,kBAAmB,EACnBC,eAAgB,GAGd1C,EAAU,IAAIC,QAOpB,SAAS0C,EAAaxC,GAClB4B,EAAe5B,EAAEyC,QACjBX,GAAa,EACb9B,EAAEK,cAAcqC,iBAAiB,YAAaC,GAGlD,SAASA,EAAY3C,GAEjB,GADAA,EAAEQ,iBACsB,GAApBR,EAAEyC,QAAQG,OAAa,OAE3B,MAAMC,EAAQC,EAAoB9C,EAAEyC,SAEhCX,EAOR,SAA2B9B,GAAG+C,KAAEA,EAAIC,MAAEA,IAClC,GAA2B,GAAvBpB,EAAagB,OAAa,OAC9B,MAAQG,KAAME,EAAWD,MAAOE,GAAeJ,EAC3ClB,IAGEU,kBAAEA,EAAiBC,eAAEA,GAAmB1C,EAAQe,IAAIZ,EAAEK,eAEtD8C,EAAKtC,KAAKuC,IAAIL,EAAOE,GACrBI,EAAKxC,KAAKuC,IAAIJ,EAAQE,GAE5B,GAAIC,GAAMb,GAAqBe,GAAMd,EAAgB,CAMjD,GALoBzD,EAAoB,aAAckB,EAAEK,cAAe,CACnEuB,aAAAA,EACAD,cAAe3B,IAIf,OAAOhB,IAAIsE,oBAAoB,YAAaX,GAGhDd,EAAgB7B,EAAEK,cAClB0B,EAAWkB,EACXhB,EAAYiB,EACZlB,EAAa,EACbF,GAAa,EACbJ,SAASgB,iBAAiB,WAAYa,IAhCtCC,CAAkBxD,EAAG6C,GAoC7B,SAA0B7C,EAAG6C,GACzB,MAAMG,MAAEA,EAAKS,OAAEA,EAAMV,KAAEA,GAASF,EAQhC,GAPoBa,EAAmB,OAAQ1D,EAAEK,cAAe,IACzDwC,EACHlB,cAAe3B,EACfyC,QAASzC,EAAEyC,UAIE,OAEjBV,EAAWgB,EACXd,EAAYe,EACZhB,EAAayB,EA/CTE,CAAiB3D,EAAG6C,GAkD5B,SAASC,EAAoBL,GACzB,MAAOmB,EAAIC,GAAMpB,EAEXqB,EAAKF,EAAG1D,QAAU2D,EAAG3D,QACrB6D,EAAKH,EAAGzD,QAAU0D,EAAG1D,QAErB4C,EAAOlC,KAAKC,MAAMgD,EAAIC,GACtBN,EAASV,EAAOhB,EAEhBiB,EAAQnC,KAAKmD,MAAMD,EAAID,GAQ7B,MAAO,CAAEA,GAAAA,EAAIC,GAAAA,EAAIV,GAPNL,EAAQf,EAOEc,KAAAA,EAAMC,MAAAA,EAAOS,OAAAA,EAAQQ,MAL5BL,EAAG1D,QAAU2D,EAAG3D,SAAW,EAKOgE,MAJlCN,EAAGzD,QAAU0D,EAAG1D,SAAW,EAIagE,IAF1CtD,KAAKuD,KAAKrB,GAAQhB,GAAYgB,KAK9C,SAASQ,EAAWvD,IACX8B,GAAcD,IACf6B,EAAmB,MAAO7B,EAAe,MAAM,GAC/CA,OAAgBP,GAIxB,SAASoC,EAAmBW,EAAIrF,EAAKC,EAAQC,GASzC,OAAOJ,EAAoB,QAAQuF,IAAMrF,EARzCC,EAAS,IACFA,EACH2C,aAAAA,EACA0C,YArHJA,UAsHItC,WAAAA,EACAD,SAAAA,EACAE,UAAAA,GAEkD/C,sBDhHnD,SAA0BF,EAAK2B,EAAMhB,GACxCX,EAAI0D,iBAAiB,aAActC,GAAe,GAClDpB,EAAI0D,iBAAiB,YAAatC,GAAe,GACjDP,EAAQ0E,IAAIvF,EAAK2B,wBCGd,SAA2B3B,EAAK2B,EAAMhB,GACzCE,EAAQ0E,IAAIvF,EAAK2B,GACjB3B,EAAI0D,iBAAiB,aAAcF"}