{"version":3,"file":"index.min.js","sources":["../lib/drag.js","../lib/pinch.js"],"sourcesContent":["let activeDraggedElement;\r\nlet startX, startY;\r\nlet lastX, lastY;\r\nlet checkDragPos;\r\n\r\nconst defaults = {\r\n    threshold: 0,\r\n};\r\n\r\nconst options = new WeakMap();\r\n\r\nexport function enableDragEvents(elm, opt = defaults) {\r\n    elm.addEventListener(\"touchstart\", onPointerDown, true);\r\n    elm.addEventListener(\"mousedown\", onPointerDown, true);\r\n    options.set(elm, opt);\r\n}\r\n\r\n// create dummy mouse event object to get mouse related properties like e.clientX e.clientY, e.altKey, etc..\r\nconst MOUSE_EVENT_PROPS = Object.keys(\r\n    Object.getPrototypeOf(new MouseEvent(\"\"))\r\n);\r\n\r\nconst TOUCH_EVENT_PROPS = [\"changedTouches\", \"touches\", \"targetTouches\"];\r\n\r\nfunction getPointerPosition(e) {\r\n    if (e.changedTouches) e = e.changedTouches[0];\r\n    return [e.clientX, e.clientY];\r\n}\r\n\r\nfunction onPointerDown(e) {\r\n    activeDraggedElement = e.currentTarget;\r\n    checkDragPos = true;\r\n\r\n    [startX, startY] = getPointerPosition(e);\r\n\r\n    addOrRemoveEvents();\r\n}\r\n\r\nfunction onPointerMove(e) {\r\n    if (!activeDraggedElement) return;\r\n\r\n    const [x, y] = getPointerPosition(e);\r\n\r\n    if (checkDragPos) {\r\n        const opt = options.get(activeDraggedElement);\r\n\r\n        if (Math.hypot(x - startX, y - startY) < opt.threshold) return;\r\n\r\n        checkDragPos = false;\r\n        [lastX, lastY] = [x, y];\r\n\r\n        if (!dispatchDragEvent(\"ezgdragstart\", e)) {\r\n            removeDragEvents();\r\n        }\r\n    } else if (dispatchDragEvent(\"ezgdragmove\", e)) {\r\n        [lastX, lastY] = [x, y];\r\n    }\r\n}\r\n\r\nfunction getDragPositions(e) {\r\n    const [clientX, clientY] = getPointerPosition(e);\r\n    return {\r\n        startX,\r\n        startY,\r\n        lastX,\r\n        lastY,\r\n\r\n        //current mouse position\r\n        clientX,\r\n        clientY,\r\n\r\n        // mouse delta from initial drag position\r\n        offsetX: clientX - startX,\r\n        offsetY: clientY - startY,\r\n\r\n        // mouse delta from last drag position\r\n        movementX: clientX - lastX,\r\n        movementY: clientY - lastY,\r\n    };\r\n}\r\n\r\nfunction removeDragEvents() {\r\n    activeDraggedElement = undefined;\r\n\r\n    addOrRemoveEvents(true);\r\n}\r\n\r\nfunction onPointerUp(e) {\r\n    if (activeDraggedElement && !checkDragPos) {\r\n        dispatchDragEvent(\"ezgdragstop\", e, false);\r\n    }\r\n\r\n    removeDragEvents();\r\n}\r\n\r\nfunction addOrRemoveEvents(remove) {\r\n    const fn = remove ? \"removeEventListener\" : \"addEventListener\";\r\n    document[fn](\"mouseup\", onPointerUp);\r\n    document[fn](\"touchend\", onPointerUp);\r\n    document[fn](\"mousemove\", onPointerMove);\r\n    document[fn](\"touchmove\", onPointerMove);\r\n}\r\n\r\nfunction dispatchDragEvent(name, e, cancelable = true) {\r\n    return dispatchCustomEvent(name, activeDraggedElement, {\r\n        detail: {\r\n            ...getDragPositions(e),\r\n            originalEvent: e,\r\n        },\r\n        cancelable,\r\n    });\r\n}\r\n\r\nfunction dispatchCustomEvent(name, elm, data) {\r\n    return elm.dispatchEvent(new CustomEvent(name, data));\r\n}\r\n","let startTouches;\r\nlet lastTouches;\r\n\r\nlet activeElement;\r\nlet checkPinch;\r\n\r\nlet lastDist;\r\nlet lastOffset;\r\nlet lastAngle;\r\n\r\nconst defaults = {\r\n    distanceThreshold: 0,\r\n    angleThreshold: 0,\r\n};\r\n\r\nconst options = new WeakMap();\r\n\r\nexport function enablePinchEvents(elm, opt = defaults) {\r\n    options.set(elm, opt);\r\n    elm.addEventListener(\"touchstart\", onTouchStart);\r\n}\r\n\r\nfunction onTouchStart(e) {\r\n    startTouches = e.touches;\r\n    checkPinch = true;\r\n    e.currentTarget.addEventListener(\"touchmove\", onTouchMove);\r\n}\r\n\r\nfunction onTouchMove(e) {\r\n    if (e.touches.length != 2) return;\r\n\r\n    const props = calculatePinchProps(e.touches);\r\n\r\n    if (checkPinch) {\r\n        pinchStartHandler(e, props);\r\n    } else {\r\n        pinchMoveHandler(e, props);\r\n    }\r\n}\r\n\r\nfunction pinchStartHandler(e, { dist, angle }) {\r\n    if (startTouches.length != 2) return;\r\n    const { dist: startDist, angle: startAngle } = calculatePinchProps(\r\n        startTouches\r\n    );\r\n\r\n    const { distanceThreshold, angleThreshold } = options.get(e.currentTarget);\r\n\r\n    const dd = Math.abs(dist - startDist);\r\n    const da = Math.abs(angle - startAngle);\r\n\r\n    if (dd >= distanceThreshold && da >= angleThreshold) {\r\n        const isCancelled = dispatchCustomEvent(\"pinchstart\", e.currentTarget, {\r\n            startTouches,\r\n            originalEvent: e,\r\n        });\r\n\r\n        if (isCancelled) {\r\n            return elm.removeEventListener(\"touchmove\", onTouchMove);\r\n        }\r\n\r\n        activeElement = e.currentTarget;\r\n        lastDist = startDist;\r\n        lastAngle = startAngle;\r\n        lastOffset = 0;\r\n        checkPinch = false;\r\n        document.addEventListener(\"touchend\", onTouchEnd);\r\n    }\r\n}\r\n\r\nfunction pinchMoveHandler(e, props) {\r\n    const { angle, offset, dist } = props;\r\n    const isCancelled = dispatchPinchEvent(\"move\", e.currentTarget, {\r\n        ...props,\r\n        originalEvent: e,\r\n        touches: e.touches,\r\n    });\r\n\r\n    // will stop counting lastDist/Offset when cancelled\r\n    if (isCancelled) return;\r\n\r\n    lastDist = dist;\r\n    lastAngle = angle;\r\n    lastOffset = offset;\r\n}\r\n\r\nfunction calculatePinchProps(touches) {\r\n    const [p1, p2] = touches;\r\n\r\n    const dx = p1.clientX - p2.clientX;\r\n    const dy = p1.clientY - p2.clientY;\r\n\r\n    const dist = Math.hypot(dx, dy);\r\n    const offset = dist - lastDist;\r\n\r\n    const angle = Math.atan2(dy, dx);\r\n    const da = angle - lastAngle;\r\n\r\n    const midX = (p1.clientX + p2.clientX) / 2;\r\n    const midY = (p1.clientY + p2.clientY) / 2;\r\n\r\n    const dir = Math.sign(dist - (lastDist || dist));\r\n\r\n    return { dx, dy, da, dist, angle, offset, midX, midY, dir };\r\n}\r\n\r\nfunction onTouchEnd(e) {\r\n    if (!checkPinch && activeElement) {\r\n        dispatchPinchEvent(\"end\", activeElement, null, false);\r\n        activeElement = undefined;\r\n    }\r\n}\r\n\r\nfunction dispatchPinchEvent(ev, elm, detail, cancelable) {\r\n    detail = {\r\n        ...detail,\r\n        startTouches,\r\n        lastTouches,\r\n        lastOffset,\r\n        lastDist,\r\n        lastAngle,\r\n    };\r\n    return dispatchCustomEvent(`pinch${ev}`, elm, detail, cancelable);\r\n}\r\n\r\nfunction dispatchCustomEvent(name, elm, detail, cancelable = true) {\r\n    return !elm.dispatchEvent(\r\n        new CustomEvent(`ezg${name}`, { detail, cancelable })\r\n    );\r\n}\r\n"],"names":["activeDraggedElement","startX","startY","lastX","lastY","checkDragPos","defaults","threshold","options","WeakMap","Object","keys","getPrototypeOf","MouseEvent","getPointerPosition","e","changedTouches","clientX","clientY","onPointerDown","currentTarget","addOrRemoveEvents","onPointerMove","x","y","opt","get","Math","hypot","dispatchDragEvent","removeDragEvents","getDragPositions","offsetX","offsetY","movementX","movementY","undefined","onPointerUp","remove","fn","document","name","cancelable","elm","data","dispatchEvent","CustomEvent","dispatchCustomEvent","detail","originalEvent","startTouches","activeElement","checkPinch","lastDist","lastOffset","lastAngle","distanceThreshold","angleThreshold","onTouchStart","touches","addEventListener","onTouchMove","length","props","calculatePinchProps","dist","angle","startDist","startAngle","dd","abs","da","removeEventListener","onTouchEnd","pinchStartHandler","offset","dispatchPinchEvent","pinchMoveHandler","p1","p2","dx","dy","atan2","midX","midY","dir","sign","ev","lastTouches","set"],"mappings":"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"}