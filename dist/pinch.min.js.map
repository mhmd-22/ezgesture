{"version":3,"file":"pinch.min.js","sources":["../lib/pinch.js"],"sourcesContent":["let startTouches;\r\nlet lastTouches;\r\n\r\nlet activeElement;\r\nlet checkPinch;\r\n\r\nlet lastDist;\r\nlet lastOffset;\r\nlet lastAngle;\r\n\r\nconst defaults = {\r\n    distanceThreshold: 0,\r\n    angleThreshold: 0,\r\n};\r\n\r\nconst options = new WeakMap();\r\n\r\nexport function enablePinchEvents(elm, opt = defaults) {\r\n    options.set(elm, opt);\r\n    elm.addEventListener(\"touchstart\", onTouchStart);\r\n}\r\n\r\nfunction onTouchStart(e) {\r\n    startTouches = e.touches;\r\n    checkPinch = true;\r\n    e.currentTarget.addEventListener(\"touchmove\", onTouchMove);\r\n}\r\n\r\nfunction onTouchMove(e) {\r\n    if (e.touches.length != 2) return;\r\n\r\n    const props = calculatePinchProps(e.touches);\r\n\r\n    if (checkPinch) {\r\n        pinchStartHandler(e, props);\r\n    } else {\r\n        pinchMoveHandler(e, props);\r\n    }\r\n}\r\n\r\nfunction pinchStartHandler(e, { dist, angle }) {\r\n    if (startTouches.length != 2) return;\r\n    const { dist: startDist, angle: startAngle } = calculatePinchProps(\r\n        startTouches\r\n    );\r\n\r\n    const { distanceThreshold, angleThreshold } = options.get(e.currentTarget);\r\n\r\n    const dd = Math.abs(dist - startDist);\r\n    const da = Math.abs(angle - startAngle);\r\n\r\n    if (dd >= distanceThreshold && da >= angleThreshold) {\r\n        const isCancelled = dispatchCustomEvent(\"pinchstart\", e.currentTarget, {\r\n            startTouches,\r\n            originalEvent: e,\r\n        });\r\n\r\n        if (isCancelled) {\r\n            return elm.removeEventListener(\"touchmove\", onTouchMove);\r\n        }\r\n\r\n        activeElement = e.currentTarget;\r\n        lastDist = startDist;\r\n        lastAngle = startAngle;\r\n        lastOffset = 0;\r\n        checkPinch = false;\r\n        document.addEventListener(\"touchend\", onTouchEnd);\r\n    }\r\n}\r\n\r\nfunction pinchMoveHandler(e, props) {\r\n    const { angle, offset, dist } = props;\r\n    const isCancelled = dispatchPinchEvent(\"move\", e.currentTarget, {\r\n        ...props,\r\n        originalEvent: e,\r\n        touches: e.touches,\r\n    });\r\n\r\n    // will stop counting lastDist/Offset when cancelled\r\n    if (isCancelled) return;\r\n\r\n    lastDist = dist;\r\n    lastAngle = angle;\r\n    lastOffset = offset;\r\n}\r\n\r\nfunction calculatePinchProps(touches) {\r\n    const [p1, p2] = touches;\r\n\r\n    const dx = p1.clientX - p2.clientX;\r\n    const dy = p1.clientY - p2.clientY;\r\n\r\n    const dist = Math.hypot(dx, dy);\r\n    const offset = dist - lastDist;\r\n\r\n    const angle = Math.atan2(dy, dx);\r\n    const da = angle - lastAngle;\r\n\r\n    const midX = (p1.clientX + p2.clientX) / 2;\r\n    const midY = (p1.clientY + p2.clientY) / 2;\r\n\r\n    const dir = Math.sign(dist - (lastDist || dist));\r\n\r\n    return { dx, dy, da, dist, angle, offset, midX, midY, dir };\r\n}\r\n\r\nfunction onTouchEnd(e) {\r\n    if (!checkPinch && activeElement) {\r\n        dispatchPinchEvent(\"end\", activeElement, null, false);\r\n        activeElement = undefined;\r\n    }\r\n}\r\n\r\nfunction dispatchPinchEvent(ev, elm, detail, cancelable) {\r\n    detail = {\r\n        ...detail,\r\n        startTouches,\r\n        lastTouches,\r\n        lastOffset,\r\n        lastDist,\r\n        lastAngle,\r\n    };\r\n    return dispatchCustomEvent(`pinch${ev}`, elm, detail, cancelable);\r\n}\r\n\r\nfunction dispatchCustomEvent(name, elm, detail, cancelable = true) {\r\n    return !elm.dispatchEvent(\r\n        new CustomEvent(`ezg${name}`, { detail, cancelable })\r\n    );\r\n}\r\n"],"names":["startTouches","activeElement","checkPinch","lastDist","lastOffset","lastAngle","defaults","distanceThreshold","angleThreshold","options","WeakMap","onTouchStart","e","touches","currentTarget","addEventListener","onTouchMove","length","props","calculatePinchProps","dist","angle","startDist","startAngle","get","dd","Math","abs","da","dispatchCustomEvent","originalEvent","elm","removeEventListener","document","onTouchEnd","pinchStartHandler","offset","dispatchPinchEvent","pinchMoveHandler","p1","p2","dx","clientX","dy","clientY","hypot","atan2","midX","midY","dir","sign","undefined","ev","detail","cancelable","lastTouches","name","dispatchEvent","CustomEvent","opt","set"],"mappings":"kPAAA,IAAIA,EAGAC,EACAC,EAEAC,EACAC,EACAC,EAEJ,MAAMC,EAAW,CACbC,kBAAmB,EACnBC,eAAgB,GAGdC,EAAU,IAAIC,QAOpB,SAASC,EAAaC,GAClBZ,EAAeY,EAAEC,QACjBX,GAAa,EACbU,EAAEE,cAAcC,iBAAiB,YAAaC,GAGlD,SAASA,EAAYJ,GACjB,GAAwB,GAApBA,EAAEC,QAAQI,OAAa,OAE3B,MAAMC,EAAQC,EAAoBP,EAAEC,SAEhCX,EAOR,SAA2BU,GAAGQ,KAAEA,EAAIC,MAAEA,IAClC,GAA2B,GAAvBrB,EAAaiB,OAAa,OAC9B,MAAQG,KAAME,EAAWD,MAAOE,GAAeJ,EAC3CnB,IAGEO,kBAAEA,EAAiBC,eAAEA,GAAmBC,EAAQe,IAAIZ,EAAEE,eAEtDW,EAAKC,KAAKC,IAAIP,EAAOE,GACrBM,EAAKF,KAAKC,IAAIN,EAAQE,GAE5B,GAAIE,GAAMlB,GAAqBqB,GAAMpB,EAAgB,CAMjD,GALoBqB,EAAoB,aAAcjB,EAAEE,cAAe,CACnEd,aAAAA,EACA8B,cAAelB,IAIf,OAAOmB,IAAIC,oBAAoB,YAAahB,GAGhDf,EAAgBW,EAAEE,cAClBX,EAAWmB,EACXjB,EAAYkB,EACZnB,EAAa,EACbF,GAAa,EACb+B,SAASlB,iBAAiB,WAAYmB,IAhCtCC,CAAkBvB,EAAGM,GAoC7B,SAA0BN,EAAGM,GACzB,MAAMG,MAAEA,EAAKe,OAAEA,EAAMhB,KAAEA,GAASF,EAQhC,GAPoBmB,EAAmB,OAAQzB,EAAEE,cAAe,IACzDI,EACHY,cAAelB,EACfC,QAASD,EAAEC,UAIE,OAEjBV,EAAWiB,EACXf,EAAYgB,EACZjB,EAAagC,EA/CTE,CAAiB1B,EAAGM,GAkD5B,SAASC,EAAoBN,GACzB,MAAO0B,EAAIC,GAAM3B,EAEX4B,EAAKF,EAAGG,QAAUF,EAAGE,QACrBC,EAAKJ,EAAGK,QAAUJ,EAAGI,QAErBxB,EAAOM,KAAKmB,MAAMJ,EAAIE,GACtBP,EAAShB,EAAOjB,EAEhBkB,EAAQK,KAAKoB,MAAMH,EAAIF,GAQ7B,MAAO,CAAEA,GAAAA,EAAIE,GAAAA,EAAIf,GAPNP,EAAQhB,EAOEe,KAAAA,EAAMC,MAAAA,EAAOe,OAAAA,EAAQW,MAL5BR,EAAGG,QAAUF,EAAGE,SAAW,EAKOM,MAJlCT,EAAGK,QAAUJ,EAAGI,SAAW,EAIaK,IAF1CvB,KAAKwB,KAAK9B,GAAQjB,GAAYiB,KAK9C,SAASc,EAAWtB,IACXV,GAAcD,IACfoC,EAAmB,MAAOpC,EAAe,MAAM,GAC/CA,OAAgBkD,GAIxB,SAASd,EAAmBe,EAAIrB,EAAKsB,EAAQC,GASzC,OAAOzB,EAAoB,QAAQuB,IAAMrB,EARzCsB,EAAS,IACFA,EACHrD,aAAAA,EACAuD,YApHJA,UAqHInD,WAAAA,EACAD,SAAAA,EACAE,UAAAA,GAEkDiD,GAG1D,SAASzB,EAAoB2B,EAAMzB,EAAKsB,EAAQC,GAAa,GACzD,OAAQvB,EAAI0B,cACR,IAAIC,YAAY,MAAMF,IAAQ,CAAEH,OAAAA,EAAQC,WAAAA,yBA9GzC,SAA2BvB,EAAK4B,EAAMrD,GACzCG,EAAQmD,IAAI7B,EAAK4B,GACjB5B,EAAIhB,iBAAiB,aAAcJ"}