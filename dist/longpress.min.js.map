{"version":3,"file":"longpress.min.js","sources":["../lib/longpress.js","../lib/shared.js"],"sourcesContent":["import { dispatchCustomEvent } from \"./shared\";\r\n\r\nexport function enableLongPressEvents(elm, opt = {}) {\r\n    function onPointerDown(e) {\r\n        const timeout = setTimeout(() => {\r\n            dispatchCustomEvent(\"longpress\", elm, {\r\n                originalEvent: e,\r\n            });\r\n        }, opt.duration || 700);\r\n\r\n        function onPointerUp() {\r\n            clearTimeout(timeout);\r\n        }\r\n\r\n        const options = { once: true };\r\n        elm.addEventListener(\"touchend\", onPointerUp, options);\r\n        elm.addEventListener(\"mouseup\", onPointerUp, options);\r\n    }\r\n    elm.addEventListener(\"touchstart\", onPointerDown, true);\r\n    elm.addEventListener(\"mousedown\", onPointerDown, true);\r\n}\r\n","export function dispatchCustomEvent(name, elm, detail, cancelable = true) {\r\n    return !elm.dispatchEvent(\r\n        new CustomEvent(`ezg${name}`, { detail, cancelable })\r\n    );\r\n}\r\n"],"names":["elm","opt","onPointerDown","e","timeout","setTimeout","name","detail","cancelable","dispatchEvent","CustomEvent","dispatchCustomEvent","originalEvent","duration","onPointerUp","clearTimeout","options","once","addEventListener"],"mappings":"0QAEO,SAA+BA,EAAKC,EAAM,IAC7C,SAASC,EAAcC,GACnB,MAAMC,EAAUC,YAAW,MCJ5B,SAA6BC,EAAMN,EAAKO,EAAQC,GAAa,GACxDR,EAAIS,cACR,IAAIC,YAAY,MAAMJ,IAAQ,CAAEC,OAAAA,EAAQC,WAAAA,KDGpCG,CAAoB,YAAaX,EAAK,CAClCY,cAAeT,MAEpBF,EAAIY,UAAY,KAEnB,SAASC,IACLC,aAAaX,GAGjB,MAAMY,EAAU,CAAEC,MAAM,GACxBjB,EAAIkB,iBAAiB,WAAYJ,EAAaE,GAC9ChB,EAAIkB,iBAAiB,UAAWJ,EAAaE,GAEjDhB,EAAIkB,iBAAiB,aAAchB,GAAe,GAClDF,EAAIkB,iBAAiB,YAAahB,GAAe"}